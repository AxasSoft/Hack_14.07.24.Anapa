"""empty message

Revision ID: bd59911b04d6
Revises: 08565415d833
Create Date: 2023-10-16 11:19:18.606596

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from app.enums.mod_status import ModStatus

# revision identifiers, used by Alembic.
revision = 'bd59911b04d6'
down_revision = '08565415d833'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    mod_status = postgresql.ENUM(ModStatus, name="modstatus")
    mod_status.create(op.get_bind(), checkfirst=True)
    op.add_column('event', sa.Column('status', postgresql.ENUM('created', 'approved', 'archived', 'rejected', name='modstatus'), server_default='created', nullable=False))
    op.add_column('event', sa.Column('moderation_comment', sa.String(), nullable=True))
    op.drop_column('order', 'status')
    op.add_column('order', sa.Column('status', postgresql.ENUM('created', 'approved', 'archived', 'rejected', name='modstatus'), server_default='created', nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('order', 'status',
               existing_type=postgresql.ENUM('created', 'approved', 'archived', 'rejected', name='modstatus'),
               type_=postgresql.ENUM('created', 'approved', 'archived', 'rejected', name='status'),
               existing_nullable=False,
               existing_server_default=sa.text("'created'::status"))
    op.drop_column('event', 'moderation_comment')
    op.drop_column('event', 'status')
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    # ### end Alembic commands ###
