"""add dating profile

Revision ID: 3ef27367b2f0
Revises: 2813e41c0e68
Create Date: 2024-07-04 05:24:27.839320

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3ef27367b2f0'
down_revision = '2813e41c0e68'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_subinterest_interest_id', table_name='subinterest')
    op.drop_index('ix_subinterest_id', table_name='subinterest')
    op.execute('DROP TABLE subinterest CASCADE')  # Используйте execute для выполнения запроса с CASCADE
    op.drop_index('ix_interest_id', table_name='interest')
    op.drop_table('interest')
    op.drop_index('ix_userinterest_id', table_name='userinterest')
    op.drop_index('ix_userinterest_sub_interest_id', table_name='userinterest')
    op.drop_index('ix_userinterest_user_id', table_name='userinterest')
    op.drop_table('userinterest')
    # op.drop_table('spatial_ref_sys')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('spatial_ref_sys',
    # sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    # sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    # )
    op.create_table('userinterest',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sub_interest_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['sub_interest_id'], ['subinterest.id'], name='userinterest_sub_interest_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='userinterest_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='userinterest_pkey')
    )
    op.create_index('ix_userinterest_user_id', 'userinterest', ['user_id'], unique=False)
    op.create_index('ix_userinterest_sub_interest_id', 'userinterest', ['sub_interest_id'], unique=False)
    op.create_index('ix_userinterest_id', 'userinterest', ['id'], unique=False)
    op.create_table('interest',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('interest_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='interest_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_interest_id', 'interest', ['id'], unique=False)
    op.create_table('subinterest',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('interest_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['interest_id'], ['interest.id'], name='subinterest_interest_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='subinterest_pkey')
    )
    op.create_index('ix_subinterest_interest_id', 'subinterest', ['interest_id'], unique=False)
    op.create_index('ix_subinterest_id', 'subinterest', ['id'], unique=False)
    # ### end Alembic commands ###
