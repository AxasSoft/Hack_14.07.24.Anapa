"""empty message

Revision ID: 42f9295072b7
Revises: db493cd607c7
Create Date: 2023-01-21 13:50:47.676957

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '42f9295072b7'
down_revision = 'db493cd607c7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bonus')
    op.drop_table('lessonmember')
    op.drop_table('lesson')
    op.drop_table('grouprequest')
    op.drop_table('nomailingentry')
    op.drop_table('subscription')
    op.drop_table('personalexperience')
    op.drop_table('group')
    # op.drop_index('ix_group_id', table_name='group')
    # op.drop_index('ix_group_title', table_name='group')
    # op.drop_index('ix_group_topic_id', table_name='group')
    # op.drop_index('ix_bonus_additional_user_id', table_name='bonus')
    # op.drop_index('ix_bonus_correct', table_name='bonus')
    # op.drop_index('ix_bonus_created', table_name='bonus')
    # op.drop_index('ix_bonus_id', table_name='bonus')
    # op.drop_index('ix_bonus_recipient_id', table_name='bonus')
    # op.drop_index('ix_bonus_tech_name', table_name='bonus')
    # op.drop_index('ix_bonus_title', table_name='bonus')
    # op.drop_index('ix_grouprequest_accepted', table_name='grouprequest')
    # op.drop_index('ix_grouprequest_created', table_name='grouprequest')
    # op.drop_index('ix_grouprequest_id', table_name='grouprequest')
    # op.drop_index('ix_grouprequest_is_deleted', table_name='grouprequest')
    # op.drop_index('ix_grouprequest_title', table_name='grouprequest')
    # op.drop_index('ix_grouprequest_topic_id', table_name='grouprequest')
    # op.drop_index('ix_grouprequest_user_id', table_name='grouprequest')
    # op.drop_index('ix_nomailingentry_created', table_name='nomailingentry')
    # op.drop_index('ix_nomailingentry_id', table_name='nomailingentry')
    # op.drop_index('ix_nomailingentry_user_id', table_name='nomailingentry')
    # op.drop_index('ix_lessonmember_id', table_name='lessonmember')
    # op.drop_index('ix_lessonmember_lesson_id', table_name='lessonmember')
    # op.drop_index('ix_lessonmember_status', table_name='lessonmember')
    # op.drop_index('ix_lessonmember_user_id', table_name='lessonmember')
    # op.drop_index('ix_personalexperience_id', table_name='personalexperience')
    # op.drop_index('ix_personalexperience_topic_id', table_name='personalexperience')
    # op.drop_index('ix_personalexperience_user_id', table_name='personalexperience')
    # op.drop_index('ix_lesson_group_id', table_name='lesson')
    # op.drop_index('ix_lesson_id', table_name='lesson')
    # op.drop_index('ix_lesson_number', table_name='lesson')
    # op.drop_index('ix_lesson_starts', table_name='lesson')
    # op.drop_index('ix_subscription_created', table_name='subscription')
    # op.drop_index('ix_subscription_id', table_name='subscription')
    # op.drop_index('ix_subscription_object_id', table_name='subscription')
    # op.drop_index('ix_subscription_subject_id', table_name='subscription')
    # op.drop_index('ix_user_age_group', table_name='user')
    # op.drop_index('ix_user_full_name', table_name='user')
    # op.drop_index('ix_user_is_available', table_name='user')
    # op.drop_index('ix_user_is_premium', table_name='user')
    # op.drop_index('ix_user_is_premium_before', table_name='user')
    # op.drop_index('ix_user_is_prof', table_name='user')
    # op.drop_index('ix_user_referrer_id', table_name='user')
    op.drop_constraint('user_referrer_id_fkey', 'user', type_='foreignkey')
    op.drop_column('user', 'is_premium_before')
    op.drop_column('user', 'self_desc')
    op.drop_column('user', 'is_premium')
    op.drop_column('user', 'age_group')
    op.drop_column('user', 'self_analysis')
    op.drop_column('user', 'full_name')
    op.drop_column('user', 'referrer_id')
    op.drop_column('user', 'is_prof')
    op.drop_column('user', 'is_available')
    op.create_table('verificationcode',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tel', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('user', sa.Column('patronymic', sa.String(), nullable=True))
    op.add_column('user', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('user', sa.Column('tel', sa.String(), nullable=True))
    op.add_column('user', sa.Column('shadow_tel', sa.String(), nullable=True))
    op.add_column('user', sa.Column('birthtime', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('rating', sa.Float(), nullable=True))
    op.add_column('user', sa.Column('created_orders_count', sa.Integer(), nullable=True))
    op.add_column('user', sa.Column('completed_orders_count', sa.Integer(), nullable=True))
    op.add_column('user', sa.Column('my_orders_count', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_verificationcode_id'), 'verificationcode', ['id'], unique=False)
    op.create_index(op.f('ix_user_first_name'), 'user', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_index(op.f('ix_user_patronymic'), 'user', ['patronymic'], unique=False)
    op.create_index(op.f('ix_user_shadow_tel'), 'user', ['shadow_tel'], unique=True)
    op.create_index(op.f('ix_user_tel'), 'user', ['tel'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('is_available', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('is_prof', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('referrer_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('self_analysis', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('age_group', postgresql.ENUM('first', 'second', 'third', 'fourth', name='agegroup'), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('is_premium', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('self_desc', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('is_premium_before', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key('user_referrer_id_fkey', 'user', 'user', ['referrer_id'], ['id'])
    # op.drop_index(op.f('ix_user_tel'), table_name='user')
    # op.drop_index(op.f('ix_user_shadow_tel'), table_name='user')
    # op.drop_index(op.f('ix_user_patronymic'), table_name='user')
    # op.drop_index(op.f('ix_user_last_name'), table_name='user')
    # op.drop_index(op.f('ix_user_first_name'), table_name='user')
    op.create_index('ix_user_referrer_id', 'user', ['referrer_id'], unique=False)
    op.create_index('ix_user_is_prof', 'user', ['is_prof'], unique=False)
    op.create_index('ix_user_is_premium_before', 'user', ['is_premium_before'], unique=False)
    op.create_index('ix_user_is_premium', 'user', ['is_premium'], unique=False)
    op.create_index('ix_user_is_available', 'user', ['is_available'], unique=False)
    op.create_index('ix_user_full_name', 'user', ['full_name'], unique=False)
    op.create_index('ix_user_age_group', 'user', ['age_group'], unique=False)
    op.drop_column('user', 'my_orders_count')
    op.drop_column('user', 'completed_orders_count')
    op.drop_column('user', 'created_orders_count')
    op.drop_column('user', 'rating')
    op.drop_column('user', 'birthtime')
    op.drop_column('user', 'shadow_tel')
    op.drop_column('user', 'tel')
    op.drop_column('user', 'last_name')
    op.drop_column('user', 'patronymic')
    op.drop_column('user', 'first_name')
    op.create_table('subscription',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('subject_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('object_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['object_id'], ['user.id'], name='subscription_object_id_fkey'),
    sa.ForeignKeyConstraint(['subject_id'], ['user.id'], name='subscription_subject_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='subscription_pkey')
    )
    op.create_index('ix_subscription_subject_id', 'subscription', ['subject_id'], unique=False)
    op.create_index('ix_subscription_object_id', 'subscription', ['object_id'], unique=False)
    op.create_index('ix_subscription_id', 'subscription', ['id'], unique=False)
    op.create_index('ix_subscription_created', 'subscription', ['created'], unique=False)
    op.create_table('lesson',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('lesson_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('starts', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('out_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name='lesson_group_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='lesson_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_lesson_starts', 'lesson', ['starts'], unique=False)
    op.create_index('ix_lesson_number', 'lesson', ['number'], unique=False)
    op.create_index('ix_lesson_id', 'lesson', ['id'], unique=False)
    op.create_index('ix_lesson_group_id', 'lesson', ['group_id'], unique=False)
    op.create_table('personalexperience',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], name='personalexperience_topic_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='personalexperience_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='personalexperience_pkey')
    )
    op.create_index('ix_personalexperience_user_id', 'personalexperience', ['user_id'], unique=False)
    op.create_index('ix_personalexperience_topic_id', 'personalexperience', ['topic_id'], unique=False)
    op.create_index('ix_personalexperience_id', 'personalexperience', ['id'], unique=False)
    op.create_table('lessonmember',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('lesson_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('stop', 'active', 'wait', name='memberstatus'), autoincrement=False, nullable=False),
    sa.Column('link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('out_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], name='lessonmember_lesson_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='lessonmember_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='lessonmember_pkey')
    )
    op.create_index('ix_lessonmember_user_id', 'lessonmember', ['user_id'], unique=False)
    op.create_index('ix_lessonmember_status', 'lessonmember', ['status'], unique=False)
    op.create_index('ix_lessonmember_lesson_id', 'lessonmember', ['lesson_id'], unique=False)
    op.create_index('ix_lessonmember_id', 'lessonmember', ['id'], unique=False)
    op.create_table('nomailingentry',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='nomailingentry_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='nomailingentry_pkey')
    )
    op.create_index('ix_nomailingentry_user_id', 'nomailingentry', ['user_id'], unique=False)
    op.create_index('ix_nomailingentry_id', 'nomailingentry', ['id'], unique=False)
    op.create_index('ix_nomailingentry_created', 'nomailingentry', ['created'], unique=False)
    op.create_table('grouprequest',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('accepted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], name='grouprequest_topic_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='grouprequest_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='grouprequest_pkey')
    )
    op.create_index('ix_grouprequest_user_id', 'grouprequest', ['user_id'], unique=False)
    op.create_index('ix_grouprequest_topic_id', 'grouprequest', ['topic_id'], unique=False)
    op.create_index('ix_grouprequest_title', 'grouprequest', ['title'], unique=False)
    op.create_index('ix_grouprequest_is_deleted', 'grouprequest', ['is_deleted'], unique=False)
    op.create_index('ix_grouprequest_id', 'grouprequest', ['id'], unique=False)
    op.create_index('ix_grouprequest_created', 'grouprequest', ['created'], unique=False)
    op.create_index('ix_grouprequest_accepted', 'grouprequest', ['accepted'], unique=False)
    op.create_table('bonus',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('correct', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('comment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recipient_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tech_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('additional_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('object_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('object_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['additional_user_id'], ['user.id'], name='bonus_additional_user_id_fkey'),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], name='bonus_recipient_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='bonus_pkey')
    )
    op.create_index('ix_bonus_title', 'bonus', ['title'], unique=False)
    op.create_index('ix_bonus_tech_name', 'bonus', ['tech_name'], unique=False)
    op.create_index('ix_bonus_recipient_id', 'bonus', ['recipient_id'], unique=False)
    op.create_index('ix_bonus_id', 'bonus', ['id'], unique=False)
    op.create_index('ix_bonus_created', 'bonus', ['created'], unique=False)
    op.create_index('ix_bonus_correct', 'bonus', ['correct'], unique=False)
    op.create_index('ix_bonus_additional_user_id', 'bonus', ['additional_user_id'], unique=False)
    op.create_table('group',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cover', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('teacher', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lesson_duration', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('topic_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('members_limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('out_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], name='group_topic_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='group_pkey')
    )
    op.create_index('ix_group_topic_id', 'group', ['topic_id'], unique=False)
    op.create_index('ix_group_title', 'group', ['title'], unique=False)
    op.create_index('ix_group_id', 'group', ['id'], unique=False)
    # op.drop_index(op.f('ix_verificationcode_id'), table_name='verificationcode')
    op.drop_table('verificationcode')
    # ### end Alembic commands ###
